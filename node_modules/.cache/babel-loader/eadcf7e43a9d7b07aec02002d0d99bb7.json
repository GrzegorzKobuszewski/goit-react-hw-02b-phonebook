{"ast":null,"code":"var _jsxFileName = \"D:\\\\Grzegorz K\\\\4) Wiedza, Edukacja, Rozw\\xF3j\\\\Kursy, Szkolenia, Konferencje\\\\2022.02 GoIT\\\\Github Repositorium\\\\goit-react-hw-02b-phonebook\\\\src\\\\components\\\\App.jsx\";\nimport React, { Component } from 'react';\nimport { nanoid } from 'nanoid';\nimport { ContactForm } from './ContactForm/ContactForm';\nimport { ContactList } from './ContactList/ContactList';\nimport { Filter } from './Filter/Filter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst INITIAL_STATE = {\n  contacts: [{\n    id: 'id-1',\n    name: 'Krzysiek Chojnicki',\n    number: '752-365-987'\n  }, {\n    id: 'id-2',\n    name: 'Zosia Makowiecka',\n    number: '443-892-121'\n  }, {\n    id: 'id-3',\n    name: 'Michał Jackiewicz',\n    number: '569-645-079'\n  }, {\n    id: 'id-4',\n    name: 'Tomek Kujawa',\n    number: '227-391-260'\n  }],\n  filter: ''\n};\nexport class App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = { ...INITIAL_STATE\n    };\n\n    this.handleSubmit = evt => {\n      evt.preventDefault();\n      const form = evt.currentTarget;\n      const name = form.elements.name.value;\n      const number = form.elements.number.value;\n      const newContact = {\n        id: nanoid(6),\n        name: name,\n        number: number\n      };\n      const nameArray = this.state.contacts.map(_ref => {\n        let {\n          name\n        } = _ref;\n        return name;\n      });\n\n      if (nameArray.includes(name)) {\n        alert(`${name} is already in contacts.`);\n      } else {\n        this.setState(_ref2 => {\n          let {\n            contacts\n          } = _ref2;\n          return {\n            contacts: [...contacts, newContact]\n          };\n        });\n        form.reset();\n      }\n    };\n\n    this.handleChange = evt => {\n      const {\n        name,\n        value\n      } = evt.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.fooFilter = () => {\n      const newArray = this.state.contacts.filter(contact => {\n        const valueToLow = this.state.filter.toLowerCase();\n        return contact.name.toLowerCase().includes(valueToLow);\n      });\n      return newArray;\n    };\n\n    this.fooDelete = contactID => {\n      const index = this.state.contacts.findIndex(contact => contact.id === contactID);\n\n      const genNewElement = () => {\n        const array = this.state.contacts;\n        let newArray = [];\n\n        for (const element of array) {\n          if (array.indexOf(element) !== index) {\n            newArray.push(element);\n          }\n        }\n\n        return newArray;\n      };\n\n      this.setState(_ref3 => {\n        let {\n          contacts\n        } = _ref3;\n        return {\n          contacts: genNewElement()\n        };\n      });\n    };\n  }\n\n  componentDidUpdate() {// console.log(this.state.filter);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: '100%',\n        display: 'flex',\n        margin: '0 auto',\n        maxWidght: '600',\n        flexDirection: 'column',\n        fontSize: 20,\n        color: '#010101',\n        padding: '20px 10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Phonebook\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContactForm, {\n        handleSubmit: this.handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        class: \"\",\n        children: \"Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Filter, {\n        value: this.state.filter,\n        handleChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContactList, {\n        onDelete: this.fooDelete,\n        filterArray: this.fooFilter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/Grzegorz K/4) Wiedza, Edukacja, Rozwój/Kursy, Szkolenia, Konferencje/2022.02 GoIT/Github Repositorium/goit-react-hw-02b-phonebook/src/components/App.jsx"],"names":["React","Component","nanoid","ContactForm","ContactList","Filter","INITIAL_STATE","contacts","id","name","number","filter","App","state","handleSubmit","evt","preventDefault","form","currentTarget","elements","value","newContact","nameArray","map","includes","alert","setState","reset","handleChange","target","fooFilter","newArray","contact","valueToLow","toLowerCase","fooDelete","contactID","index","findIndex","genNewElement","array","element","indexOf","push","componentDidUpdate","render","height","display","margin","maxWidght","flexDirection","fontSize","color","padding"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { nanoid } from 'nanoid';\r\n\r\nimport { ContactForm } from './ContactForm/ContactForm';\r\nimport { ContactList } from './ContactList/ContactList';\r\nimport { Filter } from './Filter/Filter';\r\n\r\nconst INITIAL_STATE = {\r\n  contacts: [\r\n    { id: 'id-1', name: 'Krzysiek Chojnicki', number: '752-365-987' },\r\n    { id: 'id-2', name: 'Zosia Makowiecka', number: '443-892-121' },\r\n    { id: 'id-3', name: 'Michał Jackiewicz', number: '569-645-079' },\r\n    { id: 'id-4', name: 'Tomek Kujawa', number: '227-391-260' },\r\n  ],\r\n  filter: '',\r\n};\r\n\r\nexport class App extends Component {\r\n  state = { ...INITIAL_STATE };\r\n\r\n  componentDidUpdate() {\r\n    // console.log(this.state.filter);\r\n  }\r\n\r\n  handleSubmit = evt => {\r\n    evt.preventDefault();\r\n    const form = evt.currentTarget;\r\n    const name = form.elements.name.value;\r\n    const number = form.elements.number.value;\r\n    const newContact = { id: nanoid(6), name: name, number: number };\r\n    const nameArray = this.state.contacts.map(({ name }) => name);\r\n    if (nameArray.includes(name)) {\r\n      alert(`${name} is already in contacts.`);\r\n    } else {\r\n      this.setState(({ contacts }) => ({\r\n        contacts: [...contacts, newContact],\r\n      }));\r\n      form.reset();\r\n    }\r\n  };\r\n\r\n  handleChange = evt => {\r\n    const { name, value } = evt.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  fooFilter = () => {\r\n    const newArray = this.state.contacts.filter(contact => {\r\n      const valueToLow = this.state.filter.toLowerCase();\r\n      return contact.name.toLowerCase().includes(valueToLow);\r\n    });\r\n    return newArray;\r\n  };\r\n\r\n  fooDelete = contactID => {\r\n    const index = this.state.contacts.findIndex(\r\n      contact => contact.id === contactID\r\n    );\r\n    const genNewElement = () => {\r\n      const array = this.state.contacts;\r\n      let newArray = [];\r\n      for (const element of array) {\r\n        if (array.indexOf(element) !== index) {\r\n          newArray.push(element);\r\n        }\r\n      }\r\n      return newArray;\r\n    };\r\n    this.setState(({ contacts }) => ({ contacts: genNewElement() }));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        style={{\r\n          height: '100%',\r\n          display: 'flex',\r\n          margin: '0 auto',\r\n          maxWidght: '600',\r\n          flexDirection: 'column',\r\n          fontSize: 20,\r\n          color: '#010101',\r\n          padding: '20px 10px',\r\n        }}\r\n      >\r\n        <h1>Phonebook</h1>\r\n        <ContactForm handleSubmit={this.handleSubmit} />\r\n\r\n        <h2 class=\"\">Contacts</h2>\r\n        <Filter value={this.state.filter} handleChange={this.handleChange} />\r\n        <ContactList onDelete={this.fooDelete} filterArray={this.fooFilter} />\r\n      </div>\r\n    );\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}