{"ast":null,"code":"var _jsxFileName = \"D:\\\\Grzegorz K\\\\4) Wiedza, Edukacja, Rozw\\xF3j\\\\Kursy, Szkolenia, Konferencje\\\\2022.02 GoIT\\\\Github Repositorium\\\\goit-react-hw-02b-phonebook\\\\src\\\\components\\\\ContactForm\\\\ContactForm.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { nanoid } from 'nanoid';\nimport styles from './ContactForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst INITIAL_STATE = {\n  id: '',\n  name: '',\n  number: ''\n};\nexport class ContactForm extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = { ...INITIAL_STATE\n    };\n    this.id = nanoid();\n\n    this.handleChange = e => {\n      const {\n        name,\n        value\n      } = e.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.onSubmit({ ...this.state\n      });\n      this.reset();\n    };\n\n    this.reset = () => this.setState({ ...INITIAL_STATE\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: styles.form,\n      onSubmit: this.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: styles.label,\n        htmlFor: this.id,\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: styles.input,\n        onChange: this.handleChange,\n        id: this.id,\n        type: \"text\",\n        name: \"name\",\n        value: this.state.name,\n        pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n        title: \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: styles.label,\n        htmlFor: this.id,\n        children: \"Phone\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: styles.input,\n        onChange: this.handleChange,\n        id: this.id,\n        type: \"tel\",\n        name: \"number\",\n        value: this.state.number,\n        pattern: \"\\\\+?\\\\d{1,4}?[-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,9}\",\n        title: \"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.button,\n        type: \"submit\",\n        children: \"Add contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nContactForm.propTypes = {\n  handleChange: PropTypes.func.isRequired,\n  handleSubmit: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["D:/Grzegorz K/4) Wiedza, Edukacja, Rozwój/Kursy, Szkolenia, Konferencje/2022.02 GoIT/Github Repositorium/goit-react-hw-02b-phonebook/src/components/ContactForm/ContactForm.jsx"],"names":["React","Component","PropTypes","nanoid","styles","INITIAL_STATE","id","name","number","ContactForm","state","handleChange","e","value","target","setState","handleSubmit","preventDefault","props","onSubmit","reset","render","form","label","input","button","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { nanoid } from 'nanoid';\r\n\r\nimport styles from './ContactForm.module.css';\r\n\r\nconst INITIAL_STATE = {\r\n    id: '',\r\n    name: '',\r\n    number: '',\r\n};\r\n\r\nexport class ContactForm extends Component {\r\n    \r\n    state = { ...INITIAL_STATE };\r\n    id = nanoid();\r\n\r\n    handleChange = e => {\r\n        const { name, value } = e.target;\r\n        this.setState({ [name]: value });\r\n    };\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.onSubmit({ ...this.state })\r\n        this.reset();\r\n    };\r\n\r\n    reset = () => this.setState({ ...INITIAL_STATE });\r\n\r\n    render() {\r\n        return (\r\n            <form className={styles.form} onSubmit={this.handleSubmit}>\r\n                <label className={styles.label} htmlFor={this.id}>Name</label>\r\n                    <input\r\n                        className={styles.input}\r\n                        onChange={this.handleChange}\r\n                        id={this.id}\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        value={this.state.name}\r\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n                        required\r\n                    />\r\n        \r\n                <label className={styles.label} htmlFor={this.id}>Phone</label>\r\n                    <input\r\n                        className={styles.input}\r\n                        onChange={this.handleChange}\r\n                        id={this.id}\r\n                        type=\"tel\"\r\n                        name=\"number\"\r\n                        value={this.state.number}\r\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n                        required\r\n                    />\r\n                \r\n                <button className={styles.button} type=\"submit\">Add contact</button>\r\n\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nContactForm.propTypes = {\r\n    handleChange: PropTypes.func.isRequired,\r\n    handleSubmit: PropTypes.func.isRequired,\r\n    \r\n};"]},"metadata":{},"sourceType":"module"}